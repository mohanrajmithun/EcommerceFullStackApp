
networks:
  app_network:
    driver: bridge

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest        # Set your custom username
      - RABBITMQ_DEFAULT_PASS=guest        # Set your custom password
      - RABBITMQ_PLUGINS=opentelemetry
      - RABBITMQ_OTEL_TRACES_EXPORTER=otlp
      - RABBITMQ_OTEL_TRACES_EXPORTER_OTLP_ENDPOINT=https://api.honeycomb.io:443
      - RABBITMQ_OTEL_TRACES_EXPORTER_OTLP_HEADERS=SU5aijCxMxzVhbFoL02BeD
      - RABBITMQ_OTEL_TRACES_SAMPLER=always_on
    ports:
      - "5672:5672"   # RabbitMQ AMQP port
      - "15672:15672" # RabbitMQ Management UI
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      retries: 3
      start_period: 5s
      timeout: 10s
    
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app_network


  seq:
    image: datalust/seq:latest
    container_name: seq
    environment:
      - SEQ_FIRSTRUN_ADMINPASSWORD=admin
      - SEQ_API_KEY=vwvAAQAg3hlifaEwx73M
      - ACCEPT_EULA=Y  # Correct syntax
    ports:
      - "5341:80"
      - "5342:5342"  # Ingestion port for API keys
    volumes:
      - seq_data:/data
      - seq_logs:/logs
    networks:
      - app_network

  invoicedataservice:
    build:
      context: ..
      dockerfile: Backend/InvoiceDataService/InvoiceDataService/Dockerfile.yaml
    image: mohanmithun005/invoicedataservice:latest  # Add image with Docker Hub username
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - app_network

  customerdatapi:
    build:
      context: ..
      dockerfile: Backend/CustomerDataAPI/CustomerDataAPI/Dockerfile
    image: mohanmithun005/customerdatapi:latest  # Add image with Docker Hub username

    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - app_network

  productsdataapiservice:
    build:
      context: ..
      dockerfile: Backend/ProductsDataApiService/ProductsDataApiService/Dockerfile
    image: mohanmithun005/productsdataapiservice:latest  # Add image with Docker Hub username
    ports:
      - "5003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - app_network

  saleorderdataservice:
    build:
      context: ..
      dockerfile: Backend/SaleOrderDataService/SaleOrderDataService/Dockerfile
    image: mohanmithun005/saleorderdataservice:latest  # Add image with Docker Hub username
    ports:
      - "5004:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - app_network

  saleorderprocessingapi:
    build:
      context: ..
      dockerfile: Backend/SaleOrderProcessingAPI/SaleOrderProcessingAPI/Dockerfile
    image: mohanmithun005/saleorderprocessingapi:latest  # Add image with Docker Hub username
    ports:
      - "5005:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - app_network

  salesinvoicegeneratorserviceapi:
    build:
      context: ..
      dockerfile: Backend/SalesInvoiceGeneratorServiceAPI/SalesInvoiceGeneratorServiceAPI/Dockerfile
    image: mohanmithun005/salesinvoicegeneratorserviceapi:latest  # Add image with Docker Hub username
    ports:
      - "5006:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - app_network
    depends_on:
      - rabbitmq

  

volumes:
  mongodb_data:
    driver: local
  seq_data:
    driver: local
  seq_logs:
    driver: local